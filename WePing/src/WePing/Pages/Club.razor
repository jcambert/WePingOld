@page "/club/{numero}"
@inherits PingBasePage
@inject ILogger<Club> logger
@using WePing.Services
@using WePing.domain.Clubs.Dto
@using WePing.domain.ClubDetails.Dto
@using WePing.domain.Licences.Dto
@using WePing.domain.Equipes.Dto
@using WePing.domain.Organismes.Dto
@using System.Reactive.Linq
@using WeChart
@using System.ComponentModel
@using WeCommon
<WeRow Class="d-none d-md-block">
    @if (Licencies.HasItems)
    {
        <WeStatTile>
            <Top><i class="fa fa-user"></i> Nombre de Licencies</Top>
            <Content>@Licencies.TotalResults</Content>
        </WeStatTile>
        <WeStatTile>
            <Top><i class="fas fa-male"></i> Hommes/Femmes <i class="fas fa-female"></i></Top>
            <Content>@(Licencies.Items.Where(x=>x.Sexe=="M").Count()) / @(Licencies.Items.Where(x=>x.Sexe=="F").Count())</Content>
            <Bottom>@CalculatePct(Licencies.Items.Where(x => x.Sexe == "M").Count(), Licencies.Items.Count)% / @CalculatePct(Licencies.Items.Where(x => x.Sexe == "F").Count(), Licencies.Items.Count)%</Bottom>
        </WeStatTile>
        <WeStatTile>
            <Top><i class="fas fa-arrow-up"></i> Progression</Top>
            <Content>@(Licencies.Items.Where(x=>x.NValeurIntitial<= x.NAncienPointsMensuel).Count()) </Content>
            <Bottom><i class="color-green">@(CalculatePct(Licencies.Items.Where(x => x.NValeurIntitial <= x.NAncienPointsMensuel).Count(),Licencies.Items.Count)) %</i> des licenciés</Bottom>
        </WeStatTile>
        <WeStatTile>
            <Top><i class="fas fa-arrow-down"></i> Regression</Top>
            <Content>@(Licencies.Items.Where(x => x.NValeurIntitial > x.NAncienPointsMensuel).Count()) </Content>
            <Bottom><i class="color-red">@(CalculatePct(Licencies.Items.Where(x => x.NValeurIntitial > x.NAncienPointsMensuel).Count(),Licencies.Items.Count)) % </i> des licenciés</Bottom>
        </WeStatTile>
    }


</WeRow>
<WeRow>
    <WeWidget Columns="new List<WeColumn>() { WeColumn.sm12, WeColumn.md4 }" Class="we_profile_box">
        <WePanel Class="">
            <Title>
                <WePanelTitle Title="Club" IsCloseable="true" IsCollapseable="true"></WePanelTitle>
            </Title>
            <Content>
                <WePanelContent>
                    <div class="we_flex">
                        <ul class="list-inline list-profile1">

                            <li>
                                <a>
                                    <i class="fab fa-facebook"></i>
                                </a>
                            </li>
                            <li>
                                <img src="_content/WeStrap/img/home.png" alt="..." class="img-circle profile_img">
                            </li>
                            <li>
                                <a>
                                    <i class="fab fa-twitter"></i>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <h3 class="name">@ClubInfo?.Nom</h3>
                    <div class="flex">
                        <ul class="list-inline list-profile2">
                            <li>
                                <h3>@EquipePhase1.Count()</h3>
                                <span>Equipes Phase 1</span>
                            </li>
                            <li>
                                <h3>@EquipePhase2.Count()</h3>
                                <span>Equipes Phase 2</span>
                            </li>

                        </ul>
                    </div>
                    <WeRow>
                        <WeCol Columns="new List<WeColumn>() {WeColumn.md9 }">
                            @ClubDetail?.NomSalle<br />
                            @ClubDetail?.AdresseSalle1<br />
                            @ClubDetail?.CodePostalSalle &nbsp; @ClubDetail?.VilleSalle
                        </WeCol>
                        <WeCol Columns="new List<WeColumn>() {WeColumn.md3 }">
                            <WeButton Id="locationBtn" OnClick="@((evt)=>ShowLocation(ClubDetail.Longitude,ClubDetail.Latitude))"><span class="fas fa-map-marker-alt"></span></WeButton>
                            <WeTooltip Target="locationBtn" Placement="Placement.Bottom">Voir sur la Carte</WeTooltip>
                        </WeCol>
                    </WeRow>
                </WePanelContent>
            </Content>
        </WePanel>

    </WeWidget>

    <WeWidget Columns="new List<WeColumn>() { WeColumn.sm12, WeColumn.md8 }">
        <WePanel>
            <Title>
                <WePanelTitle Title="@_graphicType.Item1" IsCloseable="false" IsCollapseable="false">
                    <ToolBox>
                        @foreach (var g in GraphicTypes)
                        {
                            <WeNavItem>
                                <WeButton id="@GenerateButtonId(g.Item3)" ButtonType="ButtonType.Link" Color="Color.None" OnClick="() => ShowGraphicType(g)">
                                    <i class="@g.Item2"></i>
                                </WeButton>
                            </WeNavItem>
                            <WeTooltip Target="@GenerateButtonId(g.Item3)" Placement="Placement.Bottom">@g.Item1 </WeTooltip>
                        }
                        
                    </ToolBox>
                </WePanelTitle>
            </Title>
            <Content>
                <WeContainer>
                    <WeRow>
                        @*Graphique categorie Age *@
                        @if ((AppState.Store.State.LicenciesParCategorie?.Any() ?? false) && (_graphicType.Item3 == GraphicType.CategorieAge))
                        {
                            <GraphiqueClub ChartOptions="ChartOptions" Items="AppState.Store.State.LicenciesParCategorie" Labels="AppState.Store.State.LicenciesParCategorie.Select(x=>x.GetCategorie()).ToList()" Values="AppState.Store.State.LicenciesParCategorie.Select(x=>(double) x.Total).ToList()">
                                <TTableHead>
                                    <WeTableCell>Categorie</WeTableCell>
                                    <WeTableCell>#</WeTableCell>
                                    <WeTableCell>%</WeTableCell>
                                </TTableHead>
                                <TTableBody Context="ctx">

                                    <WeTableCell>@ctx.Item.GetCategorie()</WeTableCell>
                                    <WeTableCell>@ctx.Item.Total</WeTableCell>
                                    <WeTableCell>@ctx.Item.Pourcentage %</WeTableCell>
                                </TTableBody>
                                <TooltipHeader Context="ctx">@ctx.GetCategorie()</TooltipHeader>
                                <TooltipBody Context="ctx">
                                    <WeTable Items="GetPlayerInCategory(ctx.Categorie)">
                                        <THead>
                                            <WeTableHeadCell>Nom </WeTableHeadCell>
                                            <WeTableHeadCell>Prenom</WeTableHeadCell>
                                            <WeTableHeadCell>Points</WeTableHeadCell>
                                            
                                        </THead>
                                        <TBody Context="cat">
                                            <WeTableCell>@cat.Item.Nom</WeTableCell>
                                            <WeTableCell>@cat.Item.Prenom</WeTableCell>
                                            <WeTableCell>@cat.Item.PointsMensuels</WeTableCell>

                                        </TBody>
                                    </WeTable>
                                </TooltipBody>
                            </GraphiqueClub>

                        }
                        @*Graphique progression mensuelle*@
                        else if ((AppState.Store.State.LicenciesParProgressionMensuelle?.Any() ?? false) && (_graphicType.Item3 == GraphicType.ProgressionMensuelle))
                   {
                    <GraphiqueClub ChartOptions="ChartOptions" Items="AppState.Store.State.LicenciesParProgressionMensuelle" Labels="AppState.Store.State.LicenciesParProgressionMensuelle.Select(x=>x.Categorie).ToList()" Values="AppState.Store.State.LicenciesParProgressionMensuelle.Select(x=>(double) x.Total).ToList()">
                        <TTableHead>
                            <WeTableCell>Categorie</WeTableCell>
                            <WeTableCell>#</WeTableCell>
                            <WeTableCell>%</WeTableCell>
                        </TTableHead>
                        <TTableBody Context="ctx">

                            <WeTableCell>@ctx.Item.Categorie</WeTableCell>
                            <WeTableCell>@ctx.Item.Total</WeTableCell>
                            <WeTableCell>@ctx.Item.Pourcentage %</WeTableCell>
                        </TTableBody>
                    </GraphiqueClub>


                }
                    @*Graphique Licence progression saison*@
                    else if ((AppState.Store.State.LicenciesParProgressionSaison?.Any() ?? false) && (_graphicType.Item3 == GraphicType.ProgressionSaison))
                   {
                    <GraphiqueClub ChartOptions="ChartOptions" Items="AppState.Store.State.LicenciesParProgressionSaison" Labels="AppState.Store.State.LicenciesParProgressionSaison.Select(x=>x.Categorie).ToList()" Values="AppState.Store.State.LicenciesParProgressionSaison.Select(x=>(double) x.Total).ToList()">
                        <TTableHead>
                            <WeTableCell>Categorie</WeTableCell>
                            <WeTableCell>#</WeTableCell>
                            <WeTableCell>%</WeTableCell>
                        </TTableHead>
                        <TTableBody Context="ctx">

                            <WeTableCell>@ctx.Item.Categorie</WeTableCell>
                            <WeTableCell>@ctx.Item.Total</WeTableCell>
                            <WeTableCell>@ctx.Item.Pourcentage %</WeTableCell>
                        </TTableBody>
                    </GraphiqueClub>

                }
                else if ((AppState.Store.State.LicenciesParClassement?.Any() ?? false) && (_graphicType.Item3 == GraphicType.Classement))
                       {
                        <GraphiqueClub ChartOptions="ChartOptions" Items="AppState.Store.State.LicenciesParClassement" Labels="AppState.Store.State.LicenciesParClassement.Select(x=>x.Classement.ToString()).ToList()" Values="AppState.Store.State.LicenciesParClassement.Select(x=>(double) x.Total).ToList()">
                            <TTableHead>
                                <WeTableCell>Classement</WeTableCell>
                                <WeTableCell>#</WeTableCell>
                                <WeTableCell>%</WeTableCell>
                            </TTableHead>
                            <TTableBody Context="ctx">

                                <WeTableCell>@ctx.Item.Classement</WeTableCell>
                                <WeTableCell>@ctx.Item.Total</WeTableCell>
                                <WeTableCell>@ctx.Item.Pourcentage %</WeTableCell>
                            </TTableBody>
                        </GraphiqueClub>

                    }
                    else if ((AppState.Store.State.LicenciesParPointsMensuels?.Any() ?? false) && (_graphicType.Item3 == GraphicType.PointMensuel))
                   {
                    <GraphiqueClub ChartOptions="ChartOptions" Items="AppState.Store.State.LicenciesParPointsMensuels" Labels="AppState.Store.State.LicenciesParPointsMensuels.Select(x=>x.Classement.ToString()).ToList()" Values="AppState.Store.State.LicenciesParPointsMensuels.Select(x=>(double) x.Total).ToList()">
                        <TTableHead>
                            <WeTableCell>Classement</WeTableCell>
                            <WeTableCell>#</WeTableCell>
                            <WeTableCell>%</WeTableCell>
                        </TTableHead>
                        <TTableBody Context="ctx">

                            <WeTableCell>@ctx.Item.Classement</WeTableCell>
                            <WeTableCell>@ctx.Item.Total</WeTableCell>
                            <WeTableCell>@ctx.Item.Pourcentage %</WeTableCell>
                        </TTableBody>
                    </GraphiqueClub>
                   
                }
                    </WeRow>
                </WeContainer>
            </Content>
        </WePanel>
    </WeWidget>
    <EquipeTable Phase="2" />
    <EquipeTable Phase="1" />
</WeRow>
<WeRow>
    <WeWidget Columns="new List<WeColumn>() { WeColumn.sm12, WeColumn.md6 }">
        <WePanel>
            <Title>
                <WePanelTitle Title="@_playerType.Item1" IsCloseable="true" IsCollapseable="true">
                    <ToolBox>
                        @foreach (var g in PlayerTypes)
                        {
                            <WeNavItem>
                                <WeButton id="@GenerateButtonId(g.Item3)" ButtonType="ButtonType.Link" Color="Color.None" OnClick="() => ShowPlayerType(g)">
                                    <i class="@g.Item2"></i>
                                </WeButton>
                            </WeNavItem>
                            <WeTooltip Target="@GenerateButtonId(g.Item3)" Placement="Placement.Bottom">@g.Item1 </WeTooltip>
                        }
                    </ToolBox>
                </WePanelTitle>
            </Title>
            <Content>
                <WePanelContent>
                    @if (AppState.Store.State.LicencesForClubs.Items.Any() && _playerType.Item3 == PlayerType.OrdreAlphabetique)
                    {
                        <WeTable Items="AppState.Store.State.LicencesForClubs.Items.OrderBy(x=>x.Nom).ToList()">
                            <THead>
                                <WeTableHeadCell>@(" ")</WeTableHeadCell>
                                <WeTableHeadCell>Categorie</WeTableHeadCell>
                                <WeTableHeadCell>Nom</WeTableHeadCell>
                                <WeTableHeadCell>Prénom</WeTableHeadCell>
                                <WeTableHeadCell>Points</WeTableHeadCell>
                            </THead>
                            <TBody Context="ctx">
                                <WeTableCell><span class="fa-2x fas @(ctx.Item.Sexe=="M"?"fa-male":"fa-female")"></span></WeTableCell>
                                <WeTableCell>@ctx.Item.GetCategorie()</WeTableCell>
                                <WeTableCell>@ctx.Item.Nom</WeTableCell>
                                <WeTableCell>@ctx.Item.Prenom</WeTableCell>
                                <WeTableCell>@ctx.Item.PointsMensuels</WeTableCell>

                            </TBody>
                        </WeTable>
                    }
                    else if (AppState.Store.State.LicencesForClubs.Items.Any() && _playerType.Item3 == PlayerType.ClassementOfficiel)
                    {
                        <WeTable Items="AppState.Store.State.LicencesForClubs.Items.OrderByDescending(x=>x.NPoint).ToList()">
                            <THead>
                                <WeTableHeadCell>@(" ")</WeTableHeadCell>
                                <WeTableHeadCell>Categorie</WeTableHeadCell>
                                <WeTableHeadCell>Nom</WeTableHeadCell>
                                <WeTableHeadCell>Prénom</WeTableHeadCell>
                                <WeTableHeadCell>Points</WeTableHeadCell>
                            </THead>
                            <TBody Context="ctx">
                                <WeTableCell><span class="fa-2x fas @(ctx.Item.Sexe=="M"?"fa-male":"fa-female")"></span></WeTableCell>
                                <WeTableCell>@ctx.Item.GetCategorie()</WeTableCell>
                                <WeTableCell>@ctx.Item.Nom</WeTableCell>
                                <WeTableCell>@ctx.Item.Prenom</WeTableCell>
                                <WeTableCell>@ctx.Item.NPoint</WeTableCell>

                            </TBody>
                        </WeTable>
                    }
                    else if (AppState.Store.State.LicencesForClubs.Items.Any() && _playerType.Item3 == PlayerType.PointsMensuels)
                    {
                        <WeTable Items="AppState.Store.State.LicencesForClubs.Items.OrderByDescending(x=>x.NPointsMensuel).ToList()">
                            <THead>
                                <WeTableHeadCell>@(" ")</WeTableHeadCell>
                                <WeTableHeadCell>Categorie</WeTableHeadCell>
                                <WeTableHeadCell>Nom</WeTableHeadCell>
                                <WeTableHeadCell>Prénom</WeTableHeadCell>
                                <WeTableHeadCell>Points</WeTableHeadCell>
                            </THead>
                            <TBody Context="ctx">
                                <WeTableCell><span class="fa-2x fas @(ctx.Item.Sexe=="M"?"fa-male":"fa-female")"></span></WeTableCell>
                                <WeTableCell>@ctx.Item.GetCategorie()</WeTableCell>
                                <WeTableCell>@ctx.Item.Nom</WeTableCell>
                                <WeTableCell>@ctx.Item.Prenom</WeTableCell>
                                <WeTableCell>@(Math.Floor (ctx.Item.NPointsMensuel))</WeTableCell>

                            </TBody>
                        </WeTable>
                    }
                    else if (AppState.Store.State.LicencesForClubs.Items.Any() && _playerType.Item3 == PlayerType.CategorieAge)
                    {
                        <WeTable Items="AppState.Store.State.LicencesForClubs.Items.OrderBy(x=>x.Categorie).ToList()">
                            <THead>
                                <WeTableHeadCell>@(" ")</WeTableHeadCell>
                                <WeTableHeadCell>Categorie</WeTableHeadCell>
                                <WeTableHeadCell>Nom</WeTableHeadCell>
                                <WeTableHeadCell>Prénom</WeTableHeadCell>
                                <WeTableHeadCell>Points</WeTableHeadCell>
                            </THead>
                            <TBody Context="ctx">
                                <WeTableCell><span class="fa-2x fas @(ctx.Item.Sexe=="M"?"fa-male":"fa-female")"></span></WeTableCell>
                                <WeTableCell>@ctx.Item.GetCategorie()</WeTableCell>
                                <WeTableCell>@ctx.Item.Nom</WeTableCell>
                                <WeTableCell>@ctx.Item.Prenom</WeTableCell>
                                <WeTableCell>@(Math.Floor (ctx.Item.NPointsMensuel))</WeTableCell>

                            </TBody>
                        </WeTable>
                    }
                    else if (AppState.Store.State.LicencesForClubs.Items.Any() && _playerType.Item3 == PlayerType.ProgressionMensuelle)
                    {
                        <WeTable Items="AppState.Store.State.LicencesForClubs.Items.OrderByDescending(x=>x.ProgressionMensuelle).ToList()">
                            <THead>
                                <WeTableHeadCell>@(" ")</WeTableHeadCell>
                                <WeTableHeadCell>Categorie</WeTableHeadCell>
                                <WeTableHeadCell>Nom</WeTableHeadCell>
                                <WeTableHeadCell>Prénom</WeTableHeadCell>
                                <WeTableHeadCell>Points</WeTableHeadCell>
                            </THead>
                            <TBody Context="ctx">
                                <WeTableCell><span class="fa-2x fas @(ctx.Item.Sexe=="M"?"fa-male":"fa-female")"></span></WeTableCell>
                                <WeTableCell>@ctx.Item.GetCategorie()</WeTableCell>
                                <WeTableCell>@ctx.Item.Nom</WeTableCell>
                                <WeTableCell>@ctx.Item.Prenom</WeTableCell>
                                <WeTableCell>@(ctx.Item.ProgressionMensuelle)</WeTableCell>

                            </TBody>
                        </WeTable>
                    }
                </WePanelContent>
            </Content>
        </WePanel>
    </WeWidget>
</WeRow>
@code {
    [Parameter] public string Numero { get; set; }
    private WeSerie SerieCategorie { get; set; }
    public ClubDto ClubInfo => AppState.Store.State.Club;
    public ClubDetailDto ClubDetail => AppState.Store.State.ClubDetail;
    public IPagedResultWithLinks<LicenceDto> Licencies => AppState.Store.State.LicencesForClubs;
    public List<EquipeDto> EquipePhase1 => AppState.Store.State.EquipePhase1;
    public List<EquipeDto> EquipePhase2 => AppState.Store.State.EquipePhase2;
    public IPagedResultWithLinks<OrganismeDto> Organismes => AppState.Store.State.Organismes;

    private string GetSerieBackground(int index) =>
        $"background-color:{SerieCategorie?.Backgrounds[index].ToRGB()}";


    private OrganismeDto GetOrganisme(string id) =>
    Organismes.Items.Where(o => o.Id == id).FirstOrDefault();

    private IOptions ChartOptions =>
        new Options() { Title = new OptionTitle() { Display = false }, Legend = new OptionLegend() { Display = false }, Responsive = true };


    protected override void OnInitialized()
    {
        base.OnInitialized();
        _graphicType = _graphicTypes.Where(x => x.Item3 == GraphicType.Classement).First();
        _playerType = _playerTypes.Where(x => x.Item3 == PlayerType.OrdreAlphabetique).First();
    }

    private int CalculatePct(int count, int total) => (int)((1.0 * count) / total * 100);

    private void ShowLocation(string lon, string lat)
    {
        //var cats = from lic in Licencies.Items orderby lic.Categorie group lic by lic.Categorie;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            AppState.Store.OnChanged.Where(a => a.Action == typeof(BrowseEquipeAction)).Subscribe(mutation =>
            {
                var eqs = mutation.State.Equipes.Items.ToObservable();
                ActionService.AllowStateChanged = false;
                eqs.SubscribeAsync(equipe => AppState.Store.DispatchAsync<BrowseResultatEquipeClassementAction>(a => a.Equipe = equipe),
                    ex => logger.LogError(ex.Message),
                    () =>
                    {
                        logger.LogInformation("Equipes are loaded");
                        ActionService.AllowStateChanged = true;
                        ActionService.NotifyStateChanged<BrowseResultatEquipeClassementAction>();
                    });
            });

            AppState.Store.OnChanged.Where(a => a.Action == typeof(BrowsePartiesAction)).Subscribe(mutation => {
                return;
            });
            await LoadDatas();
        }
    }
    protected override async Task LoadDatas()
    {
        await AppState.Store.DispatchAsync<BrowseOrganismesAction>
                   (a => { });
        await AppState.Store.DispatchAsync<GetClubAction>
            (a => a.Numero = Numero);
        await AppState.Store.DispatchAsync<BrowseClubDetailAction>
            (a => a.Numero = Numero);
        await AppState.Store.DispatchAsync<BrowseLicencesForClubAction>
            (a => a.Numero = Numero);
        await AppState.Store.DispatchAsync<BrowseEquipeAction>
            (a => a.Numero = Numero);
    }
    List<(string, string, GraphicType)> _graphicTypes = WeCommon.Extensions.GetIconAndDescription<GraphicType>();
    private List<(string, string, GraphicType)> GraphicTypes => _graphicTypes;
    private (string, string, GraphicType) _graphicType;
    void ShowGraphicType((string, string, GraphicType) type)
    {
        _graphicType = type;
    }
    string GenerateButtonId(GraphicType type) => $"btn-{type.ToString()}";

    List<(string, string, PlayerType)> _playerTypes = WeCommon.Extensions.GetIconAndDescription<PlayerType>();
    private List<(string, string, PlayerType)> PlayerTypes => _playerTypes;
    private (string, string, PlayerType) _playerType;
    void ShowPlayerType((string, string, PlayerType) type)
    {
        _playerType = type;
    }
    string GenerateButtonId(PlayerType type) => $"btn-{type.ToString()}";

    string ButtonClubId = Guid.NewGuid().ToString().Replace("-", "");
    private List<LicenceDto> GetPlayerInCategory(string categorie)
    {
        return AppState.Store.State.LicencesForClubs.Items.Where(lic => lic.Categorie == categorie).ToList();
    }
    private enum GraphicType
    {
        [Description("Catgégorie d'age")]
        [Icon("fas fa-chart-pie")]
        CategorieAge,
        [Description("Classement")]
        [Icon("fas fa-chart-bar")]
        Classement,
        [Description("Points Mensuels")]
        [Icon("fas fa-chart-line")]
        PointMensuel,
        [Description("Progressions Mensuelles")]
        [Icon("fas fa-chart-line")]
        ProgressionMensuelle,
        [Description("Progressions Saison")]
        [Icon("fas fa-chart-line")]
        ProgressionSaison,
    }
    public enum PlayerType
    {
        [Description("Ordre Alphabétique")]
        [Icon("fas fa-chart-pie")]
        OrdreAlphabetique,
        [Description("Classement officiel")]
        [Icon("fas fa-chart-pie")]
        ClassementOfficiel,
        [Description("Points Mensuels")]
        [Icon("fas fa-chart-pie")]
        PointsMensuels,
        [Description("Catgégorie d'age")]
        [Icon("fas fa-chart-pie")]
        CategorieAge,
        [Description("Progression Mensuelle")]
        [Icon("fas fa-chart-pie")]
        ProgressionMensuelle,
        [Description("Progression Saison")]
        [Icon("fas fa-chart-pie")]
        ProgressionSaison,
        [Description("Genre")]
        [Icon("fas fa-chart-pie")]
        Genre
    }

}
